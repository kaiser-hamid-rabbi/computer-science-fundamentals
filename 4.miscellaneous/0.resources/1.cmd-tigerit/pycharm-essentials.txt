$ cd
$ mkdir ~/venv
$ python3 -m venv ~/venv/environment_name
>> go to the environment folder from venv
$ sudo apt-get install python3-venv
$ source ~/venv/environment_name/bin/activate
$ cd Downloads/np-text-recognition/
$ ls
$ pip install --upgrade pip
$ pip install --upgrade setuptools
$ pip install opencv-python
$ ls
$ cd model/
$ ls
$ sh download_model.sh
$ pip install tensorflow==1.14.0
$ pip install torch
$ pip install torchvision

# to run npdetect service on the server
$ gunicorn -b 0.0.0.0:5008 -w 1 -t 86400 app:app

# train the npdetector
$ python train-detector.py --model data/lp-detector/wpod-net_update1 --name wpod-net_update3 --train-dir samples/train-detector --output-dir models/wpod-net_update3/ -op Adam -lr .001 -its 500 -bs 64

# Test purpose for validation implementation
$ python train-detector.py --model models/wpod-net_update3/wpod-net_update3_backup --name wpod-net_update4 --train-dir samples/train-detector --validation-dir samples/validation-detector/ --output-dir models/wpod-net_update4/ -op Adam -lr .001 -its 10 -bs 64


# resize images in a folder maintaining aspect ratio
for file in *.jpg; do convert $file -resize 800x600\> $file; done


# Kill GPU processes
$ nvidia-smi | grep 'python' | awk '{ print $3 }' | xargs -n1 kill -9
